{"version":3,"sources":["Todo.js","App.js","index.js"],"names":["Todo","useState","input","setInput","localStorage","getItem","JSON","parse","todo","setTodo","useEffect","setItem","stringify","Container","maxWidth","className","Typography","style","fontSize","TextField","label","value","onChange","e","target","Button","variant","color","onClick","allInputData","id","Date","getTime","toString","name","toast","success","autoClose","error","map","item","Box","IconButton","itemId","newEditItem","find","element","editItem","deleteItemId","updatedTodo","filter","deleteTodoItem","warn","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";qVAmIeA,MAvGf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAGUF,mBAXbG,aAAaC,QAAQ,SAEvBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAIK,mBAGPG,EAHO,KAGDC,EAHC,KAmDd,OA/BAC,qBAAU,WACRN,aAAaO,QAAQ,QAASL,KAAKM,UAAUJ,MAC5C,CAACA,IA8BF,eAACK,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,MAAnC,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,QAAQE,MAAO,CAAEC,SAAU,IAAjD,gCAGA,cAACC,EAAA,EAAD,CACEJ,UAAU,QACVK,MAAM,uBACNC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAASoB,EAAEC,OAAOH,UAErC,cAACI,EAAA,EAAD,CACEV,UAAU,MACVW,QAAQ,YACRC,MAAM,UACNC,QA5DU,WACd,GAAK1B,EAEE,CACL,IAAM2B,EAAe,CAAEC,IAAI,IAAIC,MAAOC,UAAUC,WAAYC,KAAMhC,GAClEO,EAAQ,GAAD,mBAAKD,GAAL,CAAWqB,KAClB1B,EAAS,IACTgC,IAAMC,QAAQ,qBAAsB,CAClCC,UAAW,WANbF,IAAMG,MAAM,2BAsDZ,sBAQA,qBAAKvB,UAAU,OAAf,SACGP,EAAK+B,KAAI,SAACC,GACT,OACE,sBAAKzB,UAAU,WAAf,UACGyB,EAAKN,KACN,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYd,QAAS,kBAhClB,SAACe,GAChB,IAAIC,EAAcpC,EAAKqC,MAAK,SAACC,GAC3B,OAAOH,IAAWG,EAAQhB,MAG5B3B,EAASyC,EAAYV,MA2BkBa,CAASP,EAAKV,KAAzC,SACE,cAAC,IAAD,CAAUH,MAAM,cAElB,cAACe,EAAA,EAAD,CAAYd,QAAS,kBAtDZ,SAACoB,GACtB,IAAMC,EAAczC,EAAK0C,QAAO,SAACJ,GAC/B,OAAOA,EAAQhB,KAAOkB,KAExBb,YAAM,sBAAuB,CAC3BE,UAAW,MAEb5B,EAAQwC,GA+C+BE,CAAeX,EAAKV,KAA/C,SACE,cAAC,IAAD,CAA0BH,MAAM,qBAPPa,EAAKV,SAc1C,cAACW,EAAA,EAAD,CAAK1B,UAAU,aAAf,SACE,eAACU,EAAA,EAAD,CACEV,UAAU,YACVW,QAAQ,WACRC,MAAM,YACNC,QAxDU,WAChBnB,EAAQ,IACR0B,IAAMiB,KAAK,iCAAkC,CAC3Cf,UAAW,OAiDT,uBAOE,cAAC,IAAD,CAAmBV,MAAM,mBAG7B,cAAC,IAAD,QCnHS0B,G,MARH,WACV,OACE,8BACE,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cfb3b4ec.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteOutlineTwoToneIcon from \"@material-ui/icons/DeleteOutlineTwoTone\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport { useEffect } from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//!to get the data from Local Storage\r\nconst getLocalItem = () => {\r\n  let list = localStorage.getItem(\"lists\");\r\n  if (list) {\r\n    return JSON.parse(localStorage.getItem(\"lists\"));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nfunction Todo() {\r\n  const [input, setInput] = useState(\"\");\r\n  //   const [todo, setTodo] = useState([]);\r\n  const [todo, setTodo] = useState(getLocalItem());\r\n\r\n  //!add todo\r\n  const AddTodo = () => {\r\n    if (!input) {\r\n      toast.error(\"please write something\");\r\n    } else {\r\n      const allInputData = { id: new Date().getTime().toString(), name: input };\r\n      setTodo([...todo, allInputData]);\r\n      setInput(\"\");\r\n      toast.success(\"SuccessFully Added\", {\r\n        autoClose: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  //! add data to local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"lists\", JSON.stringify(todo));\r\n  }, [todo]);\r\n\r\n  //!Delete single todo\r\n  const deleteTodoItem = (deleteItemId) => {\r\n    const updatedTodo = todo.filter((element) => {\r\n      return element.id !== deleteItemId;\r\n    });\r\n    toast(\"Delete SuccessFully\", {\r\n      autoClose: 3000,\r\n    });\r\n    setTodo(updatedTodo);\r\n  };\r\n\r\n  //!delete all\r\n  const removeAll = () => {\r\n    setTodo([]);\r\n    toast.warn(\"All Todos Deleted SuccessFully\", {\r\n      autoClose: 3000,\r\n    });\r\n  };\r\n\r\n  //!delete Single Item from Local storage\r\n  const editItem = (itemId) => {\r\n    let newEditItem = todo.find((element) => {\r\n      return itemId === element.id;\r\n    });\r\n    // console.log(newEditItem);\r\n    setInput(newEditItem.name);\r\n  };\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"App\">\r\n      <Typography className=\"title\" style={{ fontSize: 30 }}>\r\n        Add Your List Here\r\n      </Typography>\r\n      <TextField\r\n        className=\"input\"\r\n        label=\"Write here Your Note\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n      />\r\n      <Button\r\n        className=\"btn\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={AddTodo}\r\n      >\r\n        Add Note\r\n      </Button>\r\n      <div className=\"list\">\r\n        {todo.map((item) => {\r\n          return (\r\n            <div className=\"listItem\" key={item.id}>\r\n              {item.name}\r\n              <Box>\r\n                <IconButton onClick={() => editItem(item.id)}>\r\n                  <EditIcon color=\"primary\" />\r\n                </IconButton>\r\n                <IconButton onClick={() => deleteTodoItem(item.id)}>\r\n                  <DeleteOutlineTwoToneIcon color=\"secondary\" />\r\n                </IconButton>\r\n              </Box>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Box className=\"removeTodo\">\r\n        <Button\r\n          className=\"removeBtn\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={removeAll}\r\n        >\r\n          Remove All\r\n          <DeleteTwoToneIcon color=\"secondary\" />\r\n        </Button>\r\n      </Box>\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport \"./Todo.css\";\nconst App = () => {\n  return (\n    <div>\n      <Todo />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}